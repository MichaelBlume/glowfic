- content_for :form do
  = form_for post, :url => url, :method => method, :html => { :id => 'post_form' } do |f|
    = f.label :board_id, 'Continuity:'
    = f.select :board_id, options_from_collection_for_select(Board.order('pinned DESC, LOWER(name)').select {|b| current_user.writes_in?(b) }, :id, :name, post.board_id)
    %br
    #section{class: ('hidden' unless post.board && post.board.board_sections.exists?)}
      = f.label :section_id, 'Continuity section:'
      = f.select :section_id, options_from_collection_for_select(BoardSection.where(board_id: post.board_id).order('section_order asc'), :id, :name, post.section_id), include_blank: '— Choose Section —'
    = f.label :privacy, 'Privacy:'
    = f.select :privacy, options_from_collection_for_select(post_privacy_settings.to_a, :second, :first, post.privacy)
    #access_list
      = f.label :viewer_ids, '&#8627; Who can view this post? '.html_safe
      = f.collection_select(:viewer_ids, User.where('id != ?', post.user_id).order('username asc'),
      :id, :username, {selected: post.viewer_ids}, {multiple: true})
    %br
    = f.label :setting_ids, 'Setting:'
    = f.select :setting_ids, options_from_collection_for_select(@settings, :id, :name, post.setting_ids || post.settings.map(&:id)), {}, {multiple: true}
    %br
    = f.label :warning_ids, 'Content Warnings:'
    = f.select :warning_ids, options_from_collection_for_select(@warnings, :id, :name, post.warning_ids || post.content_warnings.map(&:id)), {}, {multiple: true}
    %br
    = f.label :tag_ids, 'Tags:'
    = f.select :tag_ids, options_from_collection_for_select(@tags, :id, :name, post.tag_ids || post.post_tags.map(&:tag_id)), {}, {multiple: true}
    %hr
    - unless post.id.present? && !post.editable_by?(current_user)
      .view-button#rtf{class: ('selected' if current_user.default_editor == 'rtf')} Rich Text
      .view-button#html{class: ('selected' if current_user.default_editor == 'html')} HTML
    = f.label :subject, 'Subject:'
    = f.text_field :subject, placeholder: 'Subject'
    %br
    = f.label :description, 'Description:'
    = f.text_field :description, placeholder: 'Description'
    .details (Optional: describe the thread's setting and major players, e.g. A Bell and Vorkosigans in Chronicle)
    - if post.id.present? && !post.editable_by?(current_user)
      = submit_tag 'Save', class: 'button', id: 'submit_button', disable_with: 'Saving...'
    - else
      %br
      #post-form-wrapper
        = f.text_area :content, class: 'tinymce'
        = f.hidden_field :character_id, id: 'reply_character_id'
        = f.hidden_field :icon_id, id: 'reply_icon_id'
        = f.hidden_field :character_alias_id, id: 'reply_character_alias_id'
        = submit_tag (method == :put ? 'Save' : "Post"), class: 'button', id: 'submit_button', disable_with: 'Saving...'
        = submit_tag "Preview", class: 'button', id: 'preview_button', name: 'button_preview'

- if post.id.present? && !post.editable_by?(current_user)
  #post-editor.padding-10= yield :form
- else
  = render partial: 'editor', locals: {item: post}
